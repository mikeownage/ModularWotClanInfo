package modularwotclaninfo;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.io.File;
import java.io.IOException;
import java.nio.file.FileSystems;
import java.util.*;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import org.ini4j.*;

/**
 *
 * @author Yoyo117 (johnp)
 */
public class SettingsFrame extends JFrame {

    protected static final Comparator<String> VehicleClassComparator = new Comparator<String>() {
        @Override
        public int compare(String class1, String class2) {
            return Utils.compareVehicleClasses(class1, class2);
        }
    };
    protected static final File settingsFile = FileSystems.getDefault().getPath(".", "settings.ini").toFile();
    private static final Integer[] options = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    private final GUI gui;
    private final GridBagLayout layout;

    private final Ini ini;
    private TreeMap<String, JComboBox> vClassSettings; // sorted ?

    private int yCount = 2;

    public SettingsFrame(GUI gui) throws IOException { // only invoke as new runnable (?)
        this.gui = gui;
        this.setLocationRelativeTo(this.gui);
        initComponents();
        this.layout = (GridBagLayout)getContentPane().getLayout();
        if (!settingsFile.exists()) { settingsFile.createNewFile(); }
        this.ini = new Ini(settingsFile);
        this.vClassSettings = new TreeMap<>(VehicleClassComparator);
        createVehicleSettings();

        this.setVisible(true);
    }

    private void createVehicleSettings() throws IOException {
        vClassSettings.clear();
        // parse overall
        int minTier = 0;
        try {
            minTier = Integer.parseInt(ini.get("VehicleTiers", "Unknown"));
        } catch (NumberFormatException e) {}
        ini.put("VehicleTiers", "Unknown", minTier);
        unknownTier.setSelectedItem(minTier);
        // parse rest
        if (gui.getClan() == null) return; // TODO: try 2 load from ini and merge
        for (Vehicle v : gui.getClan().getVehicles()) {
            if (!vClassSettings.containsKey(v.getVClass())) { // TODO: NumberFormatException
                // get data
                try {
                    minTier = Integer.parseInt(ini.get("VehicleTiers", v.getVClass()));
                } catch (NumberFormatException e) {}
                ini.put("VehicleTiers", v.getVClass(), minTier);
                // move buttons 1 row down
                this.remove(applyButton);
                this.remove(cancelButton);
                GridBagConstraints global = layout.getConstraints(this);
                global.gridy++;
                layout.setConstraints(this, global);
                // TODO: can only one mutable gbc be used ?!?
                GridBagConstraints agbc = new GridBagConstraints(3, yCount+1, 1, 1,
                        0D, 0D, GridBagConstraints.SOUTHEAST, 0, new Insets(10,10,10,10), 0, 0);
                GridBagConstraints cgbc = new GridBagConstraints(4, yCount+1, 1, 1,
                        0D, 0D, GridBagConstraints.SOUTHEAST, 0, new Insets(10,10,10,10), 0, 0);
                this.add(applyButton, agbc);
                this.add(cancelButton, cgbc);
                // create GUI
                JLabel vClassLabel = new JLabel(v.getVClass()+":");
                JComboBox vClassTier = new JComboBox(SettingsFrame.options);
                vClassTier.setSelectedItem(minTier);
                vClassSettings.put(v.getVClass(), vClassTier);
                GridBagConstraints lgbc = new GridBagConstraints(1, yCount, 1, 1,
                        0D, 0D, GridBagConstraints.CENTER, 0, new Insets(2,0,2,0), 0, 0);
                GridBagConstraints tgbc = new GridBagConstraints(2, yCount, 1, 1,
                        0D, 0D, GridBagConstraints.CENTER, 0, new Insets(2,0,2,0), 0, 0);
                this.add(vClassLabel, lgbc);
                this.add(vClassTier, tgbc);
                yCount++;
            }
        } // increase counter
        this.pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        applyButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        minTierLabel = new javax.swing.JLabel();
        unknownLabel = new javax.swing.JLabel();
        unknownTier = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        applyButton.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        applyButton.setForeground(new java.awt.Color(255, 255, 255));
        applyButton.setText("Apply");
        applyButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                applyButtonMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(applyButton, gridBagConstraints);

        cancelButton.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cancelButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelButton.setText("Cancel");
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelButtonMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(cancelButton, gridBagConstraints);

        minTierLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        minTierLabel.setForeground(new java.awt.Color(255, 255, 255));
        minTierLabel.setText("Minimum Tier:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(minTierLabel, gridBagConstraints);

        unknownLabel.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        unknownLabel.setForeground(new java.awt.Color(255, 255, 255));
        unknownLabel.setText("Unknown:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        getContentPane().add(unknownLabel, gridBagConstraints);

        unknownTier.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        unknownTier.setForeground(new java.awt.Color(255, 255, 255));
        unknownTier.setModel(new javax.swing.DefaultComboBoxModel(new Integer[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        getContentPane().add(unknownTier, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseClicked
        this.dispose();
    }//GEN-LAST:event_cancelButtonMouseClicked

    private void applyButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_applyButtonMouseClicked
        // put overall
        ini.put("VehicleTiers", "Unknown", unknownTier.getSelectedItem());
        // put modular rest and prepare <String, Integer>
        TreeMap<String, Integer> minVClassTiers = new TreeMap<>(SettingsFrame.VehicleClassComparator);
        for (Map.Entry<String, JComboBox> entry : vClassSettings.entrySet()) {
            String key = entry.getKey();
            JComboBox cBox = entry.getValue();
            String s = ini.put("VehicleTiers", key, cBox.getSelectedItem()); // assignment bcuz of "overloaded"
            int minTier = Integer.parseInt(cBox.getSelectedItem().toString());
            minVClassTiers.put(key, minTier);
        }
        gui.setMinVClassTiers(minVClassTiers);
        try {
            ini.store();
        } catch (IOException ex) { /* TODO: error handling */}
        this.dispose();
    }//GEN-LAST:event_applyButtonMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel minTierLabel;
    private javax.swing.JLabel unknownLabel;
    private javax.swing.JComboBox unknownTier;
    // End of variables declaration//GEN-END:variables
}
